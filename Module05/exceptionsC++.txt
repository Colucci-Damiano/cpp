CodeBeauty exception

example:

	if ( condition )
		throw "Something"; // the execution of the function stops

In this way the exception is not handled and the program crashes.

In order to handle the exception we need to insert the code that could trhow exception in try-catch block

try-catch BLOCK :

	try
	{
		// code expected to throw an excepton
	}
	catch ( const char *txtException ) // The type of Exception should be the same of the throw
	{
		cout << "Exception : " << txtException << endl;
	}

Syntax : 
	try
	{
		//CODE
	}
	catch( exception &e )
	{
		std::cout << "Exception: " << e.what() << std::endl;
	}

The exception could be any data type!!

	if ( condition )
		throw (101);

	try
	{
		// code 
	}
	catch ( const char *txtException)
	{
		// same code as before
	}
	catch ( int exCode )
	{
		// new code to handle int exception
	}
	catch (...) // DEFAULT HANDLER : Three dots handle any type of exception
	{
		// cout << "Exception happened!" << endl;
	}

The DEFAULT HANDLER can handle any type of exception
The DEFAULT HANDLER must be at the END of the try-catch block!!!!

							C++ Hierarchy Exceptions : (SIMPLEFIED)

				-------------------------------------------------
				|						|						|
				|					bad_alloc				runtime_error
			logic_error
				|
			out_of_range
